/*!
 * CirebonWeb (https://cirebonweb.com)
 * Copyright (c) 2023 CirebonWeb
 * Licensed under MIT (https://opensource.org/licenses/MIT)
 */
function IsEmail(email){return/^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(email)}$("input.upper").on("input",(function(){const input=$(this).val();if(input.length>0){const capitalized=input.charAt(0).toUpperCase()+input.slice(1);$(this).val(capitalized)}})),void 0!==$.validator&&$.validator.addMethod("customEmail",(function(value,element){return IsEmail(value)}),"Email tidak valid (contoh: user@example.com)");const FormHelper={resetFormValidation:function(target){const $target=$(target),form=$target.find("form")[0];form&&form.reset(),$target.find(".is-invalid, .is-valid").removeClass("is-invalid is-valid"),$target.find(".invalid-feedback, .valid-feedback").remove()},cekFormData:function(formSelector){let $form=$(formSelector);if("true"!==$form.attr("data-cek"))return{isChanged:()=>!0,resetInitial:()=>{}};let initialData={};function setInitialData(){initialData={},$form.find("input, select, textarea").each((function(){let name=$(this).attr("name");name&&($(this).is(":checkbox, :radio")?initialData[name]=$(this).is(":checked"):initialData[name]=$(this).val())}))}return setInitialData(),{isChanged:function checkChanged(){let changed=!1;return $form.find("input, select, textarea").each((function(){let name=$(this).attr("name");if(name)return($(this).is(":checkbox, :radio")?$(this).is(":checked"):$(this).val())!=initialData[name]?(changed=!0,!1):void 0})),changed||($form.find(":input").removeClass("is-invalid is-valid"),Swal.fire({icon:"info",title:"Informasi",html:"Data input tidak ada perubahan. <br> Proses simpan dibatalkan."})),changed},resetInitial:setInitialData}},handleResponse:function(form,response,options={}){const finalOptions={formCek:null,$tabelData:null,$modalDiv:null,reload:!1,...options};if(response.success)Swal.fire({icon:"success",title:"Sukses",text:response.messages}).then((()=>{if(finalOptions.formCek&&"function"==typeof finalOptions.formCek.resetInitial&&finalOptions.formCek.resetInitial(),finalOptions.$tabelData&&finalOptions.$tabelData.DataTable){const dtInstance=options.$tabelData.DataTable();dtInstance&&(dtInstance.ajax.reload(null,!1).draw(!1),Beranda.refreshCsrf())}finalOptions.$modalDiv&&finalOptions.$modalDiv.modal("hide"),finalOptions.reload&&location.reload()}));else{const validator=$(form).data("validator");if(validator&&"object"==typeof response.messages){const validErrors={};for(const key in response.messages)$(form).find(`[name="${key}"]`).length?validErrors[key]=response.messages[key]:Swal.fire("Error Key",`Input name "${key}" tidak ditemukan di form.`,"error");Object.keys(validErrors).length&&(validator.showErrors(validErrors),Swal.fire("Error Validasi","Silakan periksa kembali input Anda.","error"))}else Swal.fire("Error Respon",response.messages,"error")}},submitForm:function(form,$urlController,$btnSubmit,$btnLoading,options={}){const{formCek:formCek=null,$tabelData:$tabelData=null,$modalDiv:$modalDiv=null,$btnClose:$btnClose=null}=options,handleOptions={formCek:formCek,$tabelData:$tabelData,$modalDiv:$modalDiv,...options};return $.ajax({url:$urlController,type:"POST",data:$(form).serialize(),dataType:"json",beforeSend:function(){$btnSubmit.hide(),$btnLoading.show(),$btnClose&&$btnClose.hide()},success:function(response){FormHelper.handleResponse(form,response,handleOptions)},error:function(xhr){let msg=xhr.responseJSON?.message||xhr.responseText||"Terjadi kesalahan saat memproses.";Swal.fire("Gagal",msg,"error")},complete:function(){$btnSubmit.show(),$btnLoading.hide(),$btnClose&&$btnClose.show()}}),!1},validasiForm:function(){return{ignore:[],errorElement:"span",errorClass:"invalid-feedback",highlight:function(element){$(element).addClass("is-invalid").removeClass("is-valid")},unhighlight:function(element){$(element).removeClass("is-invalid").addClass("is-valid")},errorPlacement:function(error,element){const $parent=element.closest(".input-group, .form-group");$parent.length?$parent.append(error):element.is(".select")||element.hasClass("select2")||element.hasClass("selectpicker")?error.insertAfter(element.next()):error.insertAfter(element)}}}};